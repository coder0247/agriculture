{"version":3,"sources":["webpack:///./src/app/user/createaccount/createaccount.component.css","webpack:///./src/app/user/createaccount/createaccount.component.html","webpack:///./src/app/user/createaccount/createaccount.component.ts","webpack:///./src/app/user/login/login.component.css","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/register/register.component.css","webpack:///./src/app/user/register/register.component.html","webpack:///./src/app/user/register/register.component.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.module.ts"],"names":[],"mappings":"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","file":"app-user-user-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<!-- <app-headersecondary></app-headersecondary> -->\\n<app-header-common></app-header-common>\\n<div class=\\\"main-content shop-page login-page\\\">\\n\\t<div class=\\\"container\\\">\\n\\t\\t<div class=\\\"breadcrumbs\\\">\\n\\t\\t\\t<a href=\\\"#\\\">Home</a> \\\\\\n\\t\\t\\t<span class=\\\"current\\\"> Login or create an account</span>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"login-register-form content-form row\\\">\\n\\t\\t\\t<!--\\t\\t\\tlogin tag-->\\n\\t\\t\\t<app-login></app-login>\\n\\t\\t\\t<!--\\t\\t\\tregister tag-->\\n\\t\\t\\t<app-register></app-register>\\n\\t\\t</div>\\n\\t</div>\\n\\t<!--\\n\\t\\t<div class=\\\"brand\\\">\\n\\t\\t\\t<div class=\\\"container\\\">\\n\\t\\t\\t\\t<div class=\\\"owl-carousel\\\" data-autoplay=\\\"false\\\" data-nav=\\\"false\\\" data-dots=\\\"false\\\" data-loop=\\\"false\\\" data-slidespeed=\\\"800\\\" data-margin=\\\"30\\\"  data-responsive = '{\\\"0\\\":{\\\"items\\\":2}, \\\"640\\\":{\\\"items\\\":3}, \\\"768\\\":{\\\"items\\\":3}, \\\"1024\\\":{\\\"items\\\":4}, \\\"1200\\\":{\\\"items\\\":5}}'>\\n\\t\\t\\t\\t\\t<div class=\\\"brand-item\\\"><a href=\\\"#\\\"><img src=\\\"images/brand1.jpg\\\" alt=\\\"\\\"></a></div>\\n\\t\\t\\t\\t\\t<div class=\\\"brand-item\\\"><a href=\\\"#\\\"><img src=\\\"images/brand1.jpg\\\" alt=\\\"\\\"></a></div>\\n\\t\\t\\t\\t\\t<div class=\\\"brand-item\\\"><a href=\\\"#\\\"><img src=\\\"images/brand1.jpg\\\" alt=\\\"\\\"></a></div>\\n\\t\\t\\t\\t\\t<div class=\\\"brand-item\\\"><a href=\\\"#\\\"><img src=\\\"images/brand1.jpg\\\" alt=\\\"\\\"></a></div>\\n\\t\\t\\t\\t\\t<div class=\\\"brand-item\\\"><a href=\\\"#\\\"><img src=\\\"images/brand1.jpg\\\" alt=\\\"\\\"></a></div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n-->\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-createaccount',\n  templateUrl: './createaccount.component.html',\n  styleUrls: ['./createaccount.component.css']\n})\nexport class CreateaccountComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".error-msg {\\r\\n    /* font-size:11px; */\\r\\n}\\r\\n.loading {\\r\\n    display: inline-block;\\r\\n    left: 25px;\\r\\n    position: relative;\\r\\n}\"","module.exports = \"<div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\n    <div class=\\\"login-form\\\">\\n      <h4 class=\\\"main-title\\\">Login</h4>\\n      <h5 class=\\\"note-title\\\">All ( * ) fields are required</h5>\\n      <!-- <div>\\n        <a href=\\\"#\\\" class=\\\"social facebook\\\"><img src=\\\"images/facebook.jpg\\\" alt=\\\"\\\"></a><a class=\\\"twitter social\\\" href=\\\"#\\\"><img src=\\\"images/twitter.jpg\\\" alt=\\\"\\\"></a>\\n      </div> -->\\n      <form [formGroup]=\\\"loginForm\\\" method=\\\"POST\\\">\\n      <span class=\\\"label-text\\\">Email <span>*</span></span>\\n      <input type=\\\"email\\\" class=\\\"input-info\\\" formControlName=\\\"email\\\" required>\\n      <div *ngIf=\\\"loginForm.invalid && formsubmitted\\\" class=\\\"error-msg\\\">\\n       \\n          <div class=\\\"text-danger\\\" *ngIf=\\\"!!loginForm.controls['email'].pristine || !!loginForm.controls['email'].errors?.required\\\">Email is required.</div>\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"loginForm.controls['email'].dirty && !!loginForm.controls['email'].errors?.patternInvalid?.regexp\\\">Email is invalid.</div>\\n          <!-- {{!!loginForm.controls['email'].errors.required | json}} -->\\n      </div>\\n      <span class=\\\"label-text\\\">Password <span>*</span></span>\\n      <input type=\\\"password\\\"  formControlName=\\\"password\\\" required class=\\\"input-info\\\">\\n      <div *ngIf=\\\"loginForm.invalid && formsubmitted\\\" class=\\\"error-msg\\\">\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"!!loginForm.controls['password'].errors?.required\\\">Password is required.</div>\\n      </div>\\n      <div class=\\\"check-box\\\">\\n        <input type=\\\"checkbox\\\" class=\\\"login-check\\\" id=\\\"login-check\\\"> <label class=\\\"text-label\\\" for=\\\"login-check\\\">Remember me</label>\\n        <!-- <a href=\\\"#\\\" class=\\\"forgot\\\">Fogot your password ?</a> -->\\n      </div>\\n      <div class=\\\"group-button\\\">\\n        <button class=\\\"button submit\\\" (click)=\\\"login()\\\">Login <span class=\\\"loading\\\" *ngIf=\\\"showloading\\\"><img src=\\\"assets/images/loader.gif\\\"></span></button> \\n      </div>\\n    </form>\\n    </div>\\n    <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"error\\\"> <strong>Error : </strong> Invalid Username / Password </div>\\n  </div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { patternValidator } from '../../sharedfn/userfn';\nimport { AuthService } from '../../service/auth.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  error = false;\n  loginForm: FormGroup;\n  formsubmitted = false;\n  showloading = false;\n  constructor(private authservice: AuthService, private route: ActivatedRoute, private router: Router) {\n\n  }\n  ngOnInit() {\n    this.createForm();\n  }\n\n  private createForm() {\n    this.loginForm = new FormGroup({\n      // tslint:disable-next-line\n      email: new FormControl('', [Validators.required, patternValidator(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]),\n      password: new FormControl('', Validators.required),\n    }); // remove updateon to change the event to onchange\n  }\n\n  public login() {\n    this.formsubmitted = true;\n    if (this.loginForm.valid) {\n      this.showloading = true;\n      this.authservice.doLogin(this.loginForm.value).subscribe(res => {\n        if (res['status'] === 'success') {\n          this.showloading = false;\n          localStorage.setItem( 'firstname', res.data.firstname);\n          localStorage.setItem( 'email' , res.data.email);\n          localStorage.setItem( 'lastname' , res.data.lastname);\n          localStorage.setItem( 'isadmin' , res.data.is_admin);\n          localStorage.setItem( 'id' , res.data.id);\n          this.router.navigate(['/']);\n        } else {\n          this.showloading = false;\n          this.error = true;\n        }\n      }, (error) => {\n        this.showloading = false;\n        console.log(error);\n      });\n    }\n  }\n\n}\n","module.exports = \"span.successmsg {\\r\\n    padding: 10px;\\r\\n    left: 5px;\\r\\n    position: relative;\\r\\n}\"","module.exports = \"<div class=\\\"col-xs-12 col-sm-12 col-md-6 col-lg-6\\\">\\n    <form [formGroup]=\\\"registerForm\\\">\\n    <div class=\\\"register-form\\\">\\n      <h4 class=\\\"main-title\\\">Creat an Account</h4>\\n      <h5 class=\\\"note-title\\\">All ( * ) fields are required</h5>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6\\\">\\n          <span class=\\\"label-text\\\">Fist name <span>*</span></span>\\n          <input type=\\\"text\\\"  class=\\\"input-info\\\" formControlName=\\\"firstname\\\" required>\\n          <div *ngIf=\\\"registerForm.invalid && formsubmitted\\\" class=\\\"error-msg\\\">\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"!!registerForm.controls['firstname'].pristine || !!registerForm.controls['firstname'].errors?.required\\\">First Name is required.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6\\\">\\n          <span class=\\\"label-text\\\">Last name <span>*</span></span>\\n          <input type=\\\"text\\\"  class=\\\"input-info\\\" formControlName=\\\"lastname\\\" required>\\n      <div *ngIf=\\\"registerForm.invalid && formsubmitted\\\" class=\\\"error-msg\\\">\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"!!registerForm.controls['lastname'].pristine || !!registerForm.controls['lastname'].errors?.required\\\">Last Name is required.</div>\\n      </div>\\n        </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n      \\n        <div class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6\\\">\\n          <span class=\\\"label-text\\\">Phone Number <span>*</span></span>\\n          <input type=\\\"number\\\"  class=\\\"input-info\\\" formControlName=\\\"phoneno\\\" required min=\\\"0\\\" oninput=\\\"validity.valid||(value='');\\\">\\n          <div *ngIf=\\\"registerForm.invalid && formsubmitted\\\" class=\\\"error-msg\\\">\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"!!registerForm.controls['phoneno'].pristine || !!registerForm.controls['phoneno'].errors?.required\\\">Phone number is required.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6 regionoption\\\">\\n          <span class=\\\"label-text\\\">Region<span>*</span></span>\\n          <ng-select [searchable]=\\\"false\\\" #regionSelect [items]=\\\"regions\\\" [selectOnTab]=\\\"true\\\" bindLabel=\\\"regionname\\\" bindValue=\\\"_id\\\"\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t placeholder=\\\"Select region\\\" formControlName=\\\"region\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</ng-select>\\n                        <div *ngIf=\\\"registerForm.invalid && formsubmitted\\\" class=\\\"error-msg top-minus-4\\\">\\n                            <div class=\\\"text-danger\\\" *ngIf=\\\"!!registerForm.controls['region'].pristine || !!registerForm.controls['region'].errors?.required\\\">Region is required.</div> \\n                        </div>\\n      \\n        </div>\\n      </div>\\n      <!-- <span class=\\\"label-text\\\">Last name <span>*</span></span>\\n      <input type=\\\"text\\\"  class=\\\"input-info\\\" formControlName=\\\"lastname\\\" required>\\n      <div *ngIf=\\\"registerForm.controls['lastname'].errors && !registerForm.controls['lastname'].pristine\\\" class=\\\"error-msg\\\">\\n          <div class=\\\"text-danger\\\" [hidden]=\\\"!registerForm.controls['lastname'].errors.required\\\">Last Name is required.</div>\\n      </div> -->\\n      <span class=\\\"label-text\\\">Email Address <span>*</span></span>\\n      <input type=\\\"email\\\" class=\\\"input-info\\\" formControlName=\\\"email\\\" required>\\n      <div *ngIf=\\\"registerForm.invalid && formsubmitted\\\" class=\\\"error-msg\\\">\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"!!registerForm.controls['email'].pristine || !!registerForm.controls['email'].errors?.required\\\">Email is required.</div>\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.controls['email'].dirty && !!registerForm.controls['email'].errors?.patternInvalid?.regexp\\\">Email is invalid.</div>\\n      </div>\\n      <div class=\\\"check-box\\\">\\n        <input type=\\\"checkbox\\\" formControlName=\\\"newsletter\\\" class=\\\"login-check\\\" id=\\\"register-check\\\"> <label class=\\\"text-label\\\" for=\\\"register-check\\\">Sign Up for Newsletter</label>\\n      </div>\\n      <h5 class=\\\"title\\\">Login Information</h5>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6\\\">\\n          <span class=\\\"label-text\\\">Password <span>*</span></span>\\n          <input type=\\\"password\\\"  formControlName=\\\"password\\\"  class=\\\"input-info\\\">\\n          <div *ngIf=\\\"registerForm.invalid && formsubmitted\\\" class=\\\"error-msg\\\">\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"!!registerForm.controls['password'].pristine || !!registerForm.controls['password'].errors?.required\\\">Password is required.</div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-xs-12 col-sm-6 col-md-6 col-lg-6\\\">\\n          <span class=\\\"label-text\\\">Confirm Password <span>*</span></span>\\n          <input type=\\\"password\\\"  formControlName=\\\"confirm_password\\\"  class=\\\"input-info\\\">\\n          <div *ngIf=\\\"registerForm.invalid && formsubmitted\\\" class=\\\"error-msg\\\">\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"!!registerForm.controls['confirm_password'].pristine || !!registerForm.controls['confirm_password'].errors?.required\\\">Confirm Password is required.</div>\\n          </div>\\n          <div *ngIf=\\\"registerForm.invalid && formsubmitted && registerForm.controls['confirm_password'].dirty\\\" class=\\\"error-msg\\\">\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"!!registerForm.errors?.mismatch && !!registerForm.controls['confirm_password'].errors?.required === false\\\">Password & Confirm Password should be same.</div>\\n         </div>\\n        \\n        </div>\\n    \\n      </div>\\n      <div class=\\\"group-button\\\">\\n        <button class=\\\"button submit\\\"  (click)=\\\"register()\\\">SUBMIT <span class=\\\"loading\\\" *ngIf=\\\"showloading\\\"><img src=\\\"assets/images/loader.gif\\\"></span></button>\\n        <span class=\\\"successmsg\\\" [ngClass]=\\\"{'bg-danger': error, 'bg-success': success}\\\"  *ngIf=\\\"!!usermsg\\\" >{{usermsg}}</span>\\n      </div>\\t\\t\\n    </div>\\n    </form>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { patternValidator , passwordMatchValidator} from '../../sharedfn/userfn';\nimport { AuthService } from '../../service/auth.service';\nimport { HomeService } from '../../service/home.service';\nimport { NgOption } from '@ng-select/ng-select';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  regions: NgOption[];\n  registerForm: FormGroup;\n  formsubmitted = false;\n  showloading = false;\n  usermsg: any;\n  error = false;\n  success = false;\nconstructor(private authservice: AuthService, private homepage: HomeService) {\n\n}\n  ngOnInit() {\n    this.homepage.getRegionList()\n    .subscribe(res => {\n      if (res.status === 'success') {\n        // console.log(res);\n        this.regions = res.data.regions;\n      }\n    }, (err) => {\n      console.log(err);\n    });\n    this.createForm();\n  }\n\n  private createForm() {\n    this.registerForm = new FormGroup({\n       // tslint:disable-next-line\n       email: new FormControl('', [Validators.required, patternValidator(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)]),\n      firstname: new FormControl('', Validators.required),\n      lastname: new FormControl('', Validators.required),\n      phoneno: new FormControl('', Validators.required),\n      region: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      newsletter: new FormControl(''),\n      confirm_password: new FormControl('', Validators.required),\n    }, passwordMatchValidator);\n  }\n\n  public register() {\n    this.formsubmitted = true;\n    if (this.registerForm.valid) {\n      this.showloading = true;\n      this.authservice.newUserRegister(this.registerForm.value).subscribe(res => {\n        if ( res['status'] === 'success') {\n          this.usermsg = 'You have successfully registered.';\n          this.showloading = false;\n          this.success = true;\n          this.error = false;\n          this.registerForm.reset();\n        } else {\n          this.showloading = false;\n          this.usermsg = res.dup;\n          this.success = false;\n          this.error = true;\n        }\n      }, (err) => {\n        this.showloading = false;\n        console.log(err);\n      });\n    }\n \n    // console.log(this.registerForm.value);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreateaccountComponent } from './createaccount/createaccount.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component: CreateaccountComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { CreateaccountComponent } from './createaccount/createaccount.component';\n// import { HeadersecondaryModule } from '../headersecondary/headersecondary.module';\nimport { FooterModule } from '../footer/footer.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HeaderCommonModule } from '../header-common/header-common.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\n@NgModule({\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    FooterModule,\n    // HeadersecondaryModule,\n    HeaderCommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule\n  ],\n  declarations: [LoginComponent, RegisterComponent, CreateaccountComponent]\n})\nexport class UserModule {}\n"],"sourceRoot":""}